//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AsyncFixer {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AsyncFixer.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string AsyncCallInsideUsingBlockDescription {
            get {
                return ResourceManager.GetString("AsyncCallInsideUsingBlockDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, a disposable object, is used in a fire-and-forget async call in an using block, causing potential exception error or wrong result..
        /// </summary>
        internal static string AsyncCallInsideUsingBlockMessageFormat {
            get {
                return ResourceManager.GetString("AsyncCallInsideUsingBlockMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fire-and-forget async call inside a using block.
        /// </summary>
        internal static string AsyncCallInsideUsingBlockTitle {
            get {
                return ResourceManager.GetString("AsyncCallInsideUsingBlockTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string AsyncVoidDescription {
            get {
                return ResourceManager.GetString("AsyncVoidDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert void to Task.
        /// </summary>
        internal static string AsyncVoidFixerTitle {
            get {
                return ResourceManager.GetString("AsyncVoidFixerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid unsupported fire-and-forget async-void methods or delegates. Unhandled exceptions will crash the process..
        /// </summary>
        internal static string AsyncVoidMessageFormat {
            get {
                return ResourceManager.GetString("AsyncVoidMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fire-and-forget async-void methods or delegates.
        /// </summary>
        internal static string AsyncVoidTitle {
            get {
                return ResourceManager.GetString("AsyncVoidTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string BlockingCallInsideAsyncDescription {
            get {
                return ResourceManager.GetString("BlockingCallInsideAsyncDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert Async Call.
        /// </summary>
        internal static string BlockingCallInsideAsyncFixerTitle {
            get {
                return ResourceManager.GetString("BlockingCallInsideAsyncFixerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} should be used instead of {1}..
        /// </summary>
        internal static string BlockingCallInsideAsyncMessageFormat {
            get {
                return ResourceManager.GetString("BlockingCallInsideAsyncMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Long-running or blocking operations inside an async method.
        /// </summary>
        internal static string BlockingCallInsideAsyncTitle {
            get {
                return ResourceManager.GetString("BlockingCallInsideAsyncTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NestedTaskToOuterTaskDescription {
            get {
                return ResourceManager.GetString("NestedTaskToOuterTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downcasting from a nested task (Task&lt;Task&gt;) to a outer task or awaiting a nested task is occurred. UnWrap() is suggested..
        /// </summary>
        internal static string NestedTaskToOuterTaskMessageFormat {
            get {
                return ResourceManager.GetString("NestedTaskToOuterTaskMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downcasting from a nested task to an outer task..
        /// </summary>
        internal static string NestedTaskToOuterTaskTitle {
            get {
                return ResourceManager.GetString("NestedTaskToOuterTaskTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Await is the last statement of the method so you can return Task and await in the caller method..
        /// </summary>
        internal static string UnnecessaryAsyncDescription {
            get {
                return ResourceManager.GetString("UnnecessaryAsyncDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove async/await.
        /// </summary>
        internal static string UnnecessaryAsyncFixerTitle {
            get {
                return ResourceManager.GetString("UnnecessaryAsyncFixerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method &apos;{0}&apos; does not need to use async/await..
        /// </summary>
        internal static string UnnecessaryAsyncMessageFormat {
            get {
                return ResourceManager.GetString("UnnecessaryAsyncMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unnecessary async/await usage.
        /// </summary>
        internal static string UnnecessaryAsyncTitle {
            get {
                return ResourceManager.GetString("UnnecessaryAsyncTitle", resourceCulture);
            }
        }
    }
}
